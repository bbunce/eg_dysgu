#!/usr/bin/env python
# eg_dysgu 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# See https://documentation.dnanexus.com/developer for documentation and
# tutorials on how to modify this file.
#
# DNAnexus Python Bindings (dxpy) documentation:
#   http://autodoc.dnanexus.com/bindings/python/current/

import dxpy
import glob
import os
import stat
import subprocess
import time

@dxpy.entry_point('main')
def main(bams, family_number, sample_number, options=None, manta_vcf=None):
    # give permission to run shell script
    os.chmod("/home/dnanexus/run_dysgu.sh", stat.S_IRWXU | stat.S_IRWXG | stat.S_IXOTH)

    # The following line(s) initialize your data object inputs on the platform
    # into dxpy.DXDataObject instances that you can start using immediately.

    bams = [dxpy.DXFile(item) for item in bams]

    # The following line(s) download your file inputs to the local file system
    # using variable names for the filenames.

    # download bam/bai
    for bam in bams:
        name = dxpy.describe(bam.get_id())['name']
        dxpy.download_dxfile(bam.get_id(), name)

    # download reference
    ref = dxpy.describe({"$dnanexus_link": "file-GGVPZGj4fq4jpfZJP3YPBXZ7"})['name']
    dxpy.download_dxfile({"$dnanexus_link": "file-GGVPZGj4fq4jpfZJP3YPBXZ7"}, ref)
    dxpy.download_dxfile({"$dnanexus_link": "file-GGZ90104fq4x6G1jKkF6Jz63"}, ref + ".fai")

    # format options
    if options == None:
        options = ''
    else:
        options = options.strip()

    # download manta vcf
    if manta_vcf == None:
        manta_vcf = "empty"
    else:
        manta_vcf = dxpy.DXFile(manta_vcf)
        name = dxpy.describe(manta_vcf.get_id())['name']
        dxpy.download_dxfile({"$dnanexus_link": "file-GGVPZGj4fq4jpfZJP3YPBXZ7"}, name)
        manta_vcf = name

    # create output file prefix
    sample = f"{family_number.strip().replace(' ', '')}_{sample_number.strip().replace(' ', '')}"

    # run manta shell script
    subprocess.run(["/home/dnanexus/run_dysgu.sh",
        sample, options, manta_vcf
    ])

    # The following line fills in some basic dummy output and assumes
    # that you have created variables to represent your output with
    # the same name as your output fields.

    results = []
    for f in glob.glob('/home/dnanexus/work/*'):
        results.append(f)
    # for f in glob.glob('/home/dnanexus/work/output/**/*', recursive=True):
    #     results.append(f)
    results = [dxpy.upload_local_file(f) for f in results if os.path.isfile(f)]

    output = {}
    output["results"] = [dxpy.dxlink(item) for item in results]

    return output

dxpy.run()
